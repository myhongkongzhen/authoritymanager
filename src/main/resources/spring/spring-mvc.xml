<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (c) 2016. Lorem ipsum dolor sit amet, consectetur adipiscing elit.                                      ~
  ~ Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.                       ~
  ~ Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.                                                  ~
  ~ Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.                    ~
  ~ Vestibulum commodo. Ut rhoncus gravida arcu.                                                                      ~
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <mvc:annotation-driven/>

    <context:component-scan base-package="zzwu.std.authority.web.controller"/>

    <!-- freemarker config -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/template/"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="template_update_delay">5</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.##</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="auto_import">
                    model/ftl_lib/admin.ftl as admin,
                    model/ftl_lib/tools.ftl as t,
                    model/ftl_lib/page.ftl as p
                </prop>
                <prop key="cache_storage">freemarker.cache.NullCacheStorage</prop>
            </props>
        </property>
    </bean>

    <!-- 文件上传下载 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="utf-8"
          p:maxUploadSize="10485760"
          p:maxInMemorySize="40960"
    />

    <!--FreeMarkerViewResolver自定义 -->
    <bean id="viewResolver" class="com.yyfq.gms.admin.core.support.freemarker.ExFreeMarkerViewResolver">
        <property name="cache" value="true"/><!--正式打开-->
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
          <property name="mediaTypes">
              <value>
                  xml=application/xml
                  json=application/json
              </value>
          </property>
    </bean>
    -->

    <mvc:annotation-driven>  <!-- content-negotiation-manager="contentNegotiationManager">  -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
                <!-- <constructor-arg value="UTF-8" />   -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain; charset=UTF-8</value>
                        <value>text/html; charset=UTF-8</value>
                    </list>
                </property>
            </bean>

            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <!--  <property name="prettyPrint" value="true" />-->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json; charset=UTF-8</value>
                        <value>application/x-www-form-urlencoded; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.yyfq.gms.admin.web"/>

    <mvc:resources location="/" mapping="/favicon.ico"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/img/" mapping="/img/**"/>
    <mvc:resources location="/fonts/" mapping="/fonts/**"/>
    <mvc:resources location="/plugins/" mapping="/plugins/**"/>
    <!-- 图片资源匹配 -->
    <mvc:resources location="file:${media.default.path}/" mapping="${media.default.pathMapping}/**/"/>

    <!-- 定义无需Controller的url<->view直接映射 -->
    <mvc:view-controller path="/error" view-name="/error"/>
    <mvc:view-controller path="/error-no-permission" view-name="/error-no-permission"/>
    <mvc:view-controller path="/" view-name="redirect:/index"/>
    <!-- 定义服务器异常的view跳转 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
        <property name="defaultErrorView" value="error"></property>
        <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
        <property name="exceptionAttribute" value="ex"></property>
        <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常页名作为值   redirect:/login -->
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.AuthorizationException">error-no-permission</prop>
                <!-- 这里还可以继续扩展对不同异常类型的处理 -->
            </props>
        </property>
    </bean>

</beans>